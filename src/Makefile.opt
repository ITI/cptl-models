CTSNDP_HOME=/home/share/Code/CIRI/ctsndp/cpp/build/bin
export GUROBI_HOME=/home/share/Code/github/gurobi902/linux64

help.opt:
	@echo "------------------------------------------------------------------------------------------------------------------------"
	@echo "____________ _____   _____       _   _           _              "
	@echo "| ___ \  _  \_   _| |  _  |     | | (_)         (_)             "
	@echo "| |_/ / | | | | |   | | | |_ __ | |_ _ _ __ ___  _ _______ _ __ "
	@echo "|  __/| | | | | |   | | | |  _ \| __| |  _   _ \| |_  / _ \  __|"
	@echo "| |   | |/ /  | |   \ \_/ / |_) | |_| | | | | | | |/ /  __/ |   "
	@echo "\_|   |___/   \_/    \___/| .__/ \__|_|_| |_| |_|_/___\___|_|   "
	@echo "                          | |                                   "
	@echo "                          |_|                                   "
	@echo "------------------------------------------------------------------------------------------------------------------------"
	@echo "clean.opt                   Clean the optimizer results"
	@echo "optimize.opt                Run the optimizer on a test case"
	@echo "simulate.opt                Run the simulation with the optimizer inline"
	@echo "measurements.opt            Compute measurements from optimizer results"
	@echo "list-measurements.opt       List measurements from optimizer results"
	@echo "------------------------------------------------------------------------------------------------------------------------"

clean.opt:
	rm $(SCENARIO_DIR)/results/output.opt.sqlite

measurements.opt:
	python ./src/bin/compareTEUDurations.py $(SCENARIO_DIR) $(MONTH) $(SIM_DURATION_DAYS)
	python ./src/bin/outputTEUPaths.py $(SCENARIO_DIR) $(MONTH) $(SIM_DURATION_DAYS)

optimize.opt:
	rm -rf $(SCENARIO_DIR)/flows/shipments-opt
	mkdir $(SCENARIO_DIR)/flows/shipments-opt	
	python src/bin/patchShipmentsWithBerthArrivalTimes.py $(SCENARIO_DIR)
	mv $(SCENARIO_DIR)/flows/shipments $(SCENARIO_DIR)/flows/shipments-des
	mv $(SCENARIO_DIR)/flows/shipments-opt $(SCENARIO_DIR)/flows/shipments
	$(CTSNDP_HOME)/ctsndp --time_limit 1800 -u $(SCENARIO_DIR)/flows/schedule.json --log_all -f DES  --no_consolidations --time 360 -o $(SCENARIO_DIR)/results/ctsndp.routes -r $(SCENARIO_DIR)/results/ctsndp.results
	python src/bin/postprocessRoutes.py $(SCENARIO_DIR)/results/ctsndp.routes $(SCENARIO_DIR)/results/ctsndp.clean.routes
	mv $(SCENARIO_DIR)/flows/shipments $(SCENARIO_DIR)/flows/shipments-opt
	mv $(SCENARIO_DIR)/flows/shipments-des $(SCENARIO_DIR)/flows/shipments

simulate.opt:
	#python src/bin/postprocessRoutes.py $(SCENARIO_DIR)/results/ctsndp.routes $(SCENARIO_DIR)/results/ctsndp.clean.routes
	python -m pdb $(DES_HOME)/src/multiCommodityNetworkSim.py --baselineOnly --deterministic -o $(SCENARIO_DIR)/results/output.opt.sqlite -t $(SIM_RUN_TIME) -si 100 -p onf -pFile $(SCENARIO_DIR)/results/ctsndp.clean.routes -s $(SCENARIO_DIR)/flows/schedule.json

list-measurements.opt:
	ls $(SCENARIO_DIR)/results/measurements | grep "optimizer.csv" 
